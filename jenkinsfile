pipeline {
    agent any
    environment {
        DOCKER_CREDENTIALS_ID = 'docker-node'
        IMAGE_REPO = 'mbarrionuevo800/app-server-node'
    }
    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        stage('Extract Version') {
            steps {
                script {
                    // Cambia el directorio a 'app' antes de extraer la versión
                    dir('app') {
                        def version = sh(script: "jq -r '.version' package.json", returnStdout: true).trim()
                        env.APP_VERSION = version
                    }
                }
            }
        }
        stage('Build Docker Image') {
            steps {
                script {
                    // Cambia el directorio a 'app' antes de construir la imagen Docker
                    dir('app') {
                        docker.build("${IMAGE_REPO}:${env.APP_VERSION}")
                    }
                }
            }
        }
      stage('Run Tests') {
            agent {
                docker {
                    image 'node:14' // Usa la imagen de Docker de Node.js
                    args '-w /usr/src/app' // Establece el directorio de trabajo
                }
            }
            steps {
                script {
                    sh 'npm install' // Instala las dependencias del proyecto
                    sh 'npm test'    // Ejecuta los tests
                }
            }
        }
        stage('Push Docker Image') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', DOCKER_CREDENTIALS_ID) {
                        // Sube la imagen con la versión específica y latest
                        docker.image("${IMAGE_REPO}:${env.APP_VERSION}").push()
                        docker.image("${IMAGE_REPO}:${env.APP_VERSION}").push('latest')
                    }
                }
            }
        }
    }
}
